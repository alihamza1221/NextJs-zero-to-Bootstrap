"use strict";(()=>{var e={};e.id=662,e.ids=[662],e.modules={11185:e=>{e.exports=require("mongoose")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},55e3:(e,s,t)=>{t.r(s),t.d(s,{originalPathname:()=>m,patchFetch:()=>f,requestAsyncStorage:()=>p,routeModule:()=>u,serverHooks:()=>g,staticGenerationAsyncStorage:()=>l});var n={};t.r(n),t.d(n,{POST:()=>d});var r=t(49303),a=t(88716),o=t(60670),i=t(93227),c=t(45256);async function d(e){let{username:s,content:t}=await e.json();try{await (0,c.Z)();let e=await i.Z.findOne({username:s});if(!e)return Response.json({success:!1,message:"User Not found"},{status:500});if(!e.isAcceptingMessages)return Response.json({success:!1,message:"User doesn't allow messages"},{status:500});let n={content:t,createdAt:new Date};return e.messages.push(n),await e.save(),Response.json({success:!0,message:"Message Sent"},{status:200})}catch(e){return Response.json({success:!1,message:e.message},{status:400})}}let u=new r.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/sendMessages/route",pathname:"/api/sendMessages",filename:"route",bundlePath:"app/api/sendMessages/route"},resolvedPagePath:"C:\\Users\\aliha\\Desktop\\Nextjs\\NextJs-zero-to-Bootstrap\\Next_Bootstrap\\app\\api\\sendMessages\\route.ts",nextConfigOutput:"",userland:n}),{requestAsyncStorage:p,staticGenerationAsyncStorage:l,serverHooks:g}=u,m="/api/sendMessages/route";function f(){return(0,o.patchFetch)({serverHooks:g,staticGenerationAsyncStorage:l})}},45256:(e,s,t)=>{t.d(s,{Z:()=>o});var n=t(11185),r=t.n(n);let a={};async function o(){if(a.isConnected)return console.log("using existing connection"),!0;try{let e=await r().connect(process.env.MONGODB_URI||"");return a.isConnected=e.connections[0].readyState,console.log("new connection: "+a.isConnected),1==a.isConnected||Error("DB connection failed")}catch(e){return console.log(e),!1}}},93227:(e,s,t)=>{t.d(s,{Z:()=>i});var n=t(11185),r=t.n(n);let a=new n.Schema({content:{type:String,required:[!0,"Pleas add some content!"]},createdAt:{type:Date,required:!0,default:Date.now}}),o=new n.Schema({email:{type:String,required:[!0,"Pleas add some content!"],unique:!0,trim:!0,lowercase:!0,match:[/^([\w-\.]+@([\w-]+\.)+[\w-]{2,4})?$/,"Please fill a valid email address"]},username:{type:String,required:!0,trim:!0,minlength:2},password:{type:String,required:[!0,"username can't be empty"],trim:!0,minlength:2},verificationCode:{type:String,required:[!0,"verification code is required"]},verificationCodeExpiration:{type:Date,required:[!0,"verification code expiry is required"]},isVerified:{type:Boolean,default:!1,required:!0},isAcceptingMessages:{type:Boolean,default:!0},messages:[a]}),i=r().models.User||r().model("User",o)},49303:(e,s,t)=>{e.exports=t(30517)}};var s=require("../../../webpack-runtime.js");s.C(e);var t=e=>s(s.s=e),n=s.X(0,[948],()=>t(55e3));module.exports=n})();