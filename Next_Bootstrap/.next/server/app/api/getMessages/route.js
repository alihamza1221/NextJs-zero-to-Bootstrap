"use strict";(()=>{var e={};e.id=958,e.ids=[958],e.modules={67096:e=>{e.exports=require("bcrypt")},11185:e=>{e.exports=require("mongoose")},72934:e=>{e.exports=require("next/dist/client/components/action-async-storage.external.js")},54580:e=>{e.exports=require("next/dist/client/components/request-async-storage.external.js")},45869:e=>{e.exports=require("next/dist/client/components/static-generation-async-storage.external.js")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},39491:e=>{e.exports=require("assert")},14300:e=>{e.exports=require("buffer")},6113:e=>{e.exports=require("crypto")},82361:e=>{e.exports=require("events")},13685:e=>{e.exports=require("http")},95687:e=>{e.exports=require("https")},63477:e=>{e.exports=require("querystring")},57310:e=>{e.exports=require("url")},73837:e=>{e.exports=require("util")},59796:e=>{e.exports=require("zlib")},87738:(e,s,r)=>{r.r(s),r.d(s,{originalPathname:()=>w,patchFetch:()=>y,requestAsyncStorage:()=>x,routeModule:()=>m,serverHooks:()=>q,staticGenerationAsyncStorage:()=>f});var t={};r.r(t),r.d(t,{GET:()=>g});var i=r(49303),n=r(88716),o=r(60670),a=r(93227),c=r(45256),d=r(45609),u=r(26386),p=r(11185),l=r.n(p);async function g(e){let s=await (0,d.getServerSession)(u.N);if(!s||!s.user)return Response.json({success:!1,message:"User Not Authorized"},{status:400});let r=s.user,t=new(l()).Types.ObjectId(r._id);try{await (0,c.Z)();let e=await a.Z.aggregate([{$match:{_id:t}},{$unwind:"$messages"},{$sort:{"messages.createdAt":-1}},{$group:{_id:"$_id",messages:{$push:"$messages"}}}]);if(!e||0===e.length)return Response.json({success:!1,message:"No Messages Found"},{status:500});return Response.json({success:!0,messages:e[0].messages})}catch(e){return Response.json({success:!1,message:e.message},{status:400})}}let m=new i.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/getMessages/route",pathname:"/api/getMessages",filename:"route",bundlePath:"app/api/getMessages/route"},resolvedPagePath:"C:\\Users\\aliha\\Desktop\\Nextjs\\NextJs-zero-to-Bootstrap\\Next_Bootstrap\\app\\api\\getMessages\\route.ts",nextConfigOutput:"",userland:t}),{requestAsyncStorage:x,staticGenerationAsyncStorage:f,serverHooks:q}=m,w="/api/getMessages/route";function y(){return(0,o.patchFetch)({serverHooks:q,staticGenerationAsyncStorage:f})}},26386:(e,s,r)=>{r.d(s,{N:()=>c});var t=r(45256),i=r(93227),n=r(53797),o=r(67096),a=r.n(o);let c={providers:[(0,n.Z)({id:"credentials",name:"Credentials",credentials:{email:{label:"Email",type:"text",placeholder:"johnDoe@gmail.com"},password:{label:"Password",type:"password"}},async authorize(e){await (0,t.Z)();let{email:s}=e.identifier;try{let r=await i.Z.findOne({$or:[{email:s},{username:e.identifier}]});if(console.log(r),r){if(!r.isVerified)throw Error("User is not verified")}else throw Error("User does't exist");if(!await a().compare(e.password,r.password))throw Error("Password is incorrect");return r}catch(e){throw console.log(e.message),Error(e)}}})],callbacks:{jwt:async({token:e,user:s,trigger:r,session:t})=>(s&&(e._id=s._id?.toString(),e.isVerified=s.isVerified,e.username=s.username,e.isAcceptingMessages=s.isAcceptingMessages,e.email=s.email),"update"===r&&(console.log("triggered",t),t?.isAcceptingMessages!==void 0&&(console.log("session defined"),e.isAcceptingMessages=t.isAcceptingMessages)),e),session:async({session:e,token:s})=>(e.user._id=s._id,e.user.isVerified=s.isVerified,e.user.username=s.username,e.user.isAcceptingMessages=s.isAcceptingMessages,e)},session:{strategy:"jwt"},secret:process.env.NEXTAUTH_SECRET}},45256:(e,s,r)=>{r.d(s,{Z:()=>o});var t=r(11185),i=r.n(t);let n={};async function o(){if(n.isConnected)return console.log("using existing connection"),!0;try{let e=await i().connect(process.env.MONGODB_URI||"");return n.isConnected=e.connections[0].readyState,console.log("new connection: "+n.isConnected),1==n.isConnected||Error("DB connection failed")}catch(e){return console.log(e),!1}}},93227:(e,s,r)=>{r.d(s,{Z:()=>a});var t=r(11185),i=r.n(t);let n=new t.Schema({content:{type:String,required:[!0,"Pleas add some content!"]},createdAt:{type:Date,required:!0,default:Date.now}}),o=new t.Schema({email:{type:String,required:[!0,"Pleas add some content!"],unique:!0,trim:!0,lowercase:!0,match:[/^([\w-\.]+@([\w-]+\.)+[\w-]{2,4})?$/,"Please fill a valid email address"]},username:{type:String,required:!0,trim:!0,minlength:2},password:{type:String,required:[!0,"username can't be empty"],trim:!0,minlength:2},verificationCode:{type:String,required:[!0,"verification code is required"]},verificationCodeExpiration:{type:Date,required:[!0,"verification code expiry is required"]},isVerified:{type:Boolean,default:!1,required:!0},isAcceptingMessages:{type:Boolean,default:!0},messages:[n]}),a=i().models.User||i().model("User",o)},49303:(e,s,r)=>{e.exports=r(30517)}};var s=require("../../../webpack-runtime.js");s.C(e);var r=e=>s(s.s=e),t=s.X(0,[948,857],()=>r(87738));module.exports=t})();